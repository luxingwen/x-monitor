/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __XM_FILTER_SOCKET_BPF_SKEL_H__
#define __XM_FILTER_SOCKET_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct xm_filter_socket_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *tail_call_progs;
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *xmonitor_parse_vlan;
		struct bpf_program *xmonitor_parse_mpls;
		struct bpf_program *xmonitor_parse_ip;
		struct bpf_program *xmonitor_parse_ipv6;
		struct bpf_program *xmonitor_main_socket_prog;
	} progs;
	struct {
		struct bpf_link *xmonitor_parse_vlan;
		struct bpf_link *xmonitor_parse_mpls;
		struct bpf_link *xmonitor_parse_ip;
		struct bpf_link *xmonitor_parse_ipv6;
		struct bpf_link *xmonitor_main_socket_prog;
	} links;
	struct xm_filter_socket_bpf__rodata {
	} *rodata;
};

static void
xm_filter_socket_bpf__destroy(struct xm_filter_socket_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
xm_filter_socket_bpf__create_skeleton(struct xm_filter_socket_bpf *obj);

static inline struct xm_filter_socket_bpf *
xm_filter_socket_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct xm_filter_socket_bpf *obj;
	int err;

	obj = (struct xm_filter_socket_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = xm_filter_socket_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	xm_filter_socket_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct xm_filter_socket_bpf *
xm_filter_socket_bpf__open(void)
{
	return xm_filter_socket_bpf__open_opts(NULL);
}

static inline int
xm_filter_socket_bpf__load(struct xm_filter_socket_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct xm_filter_socket_bpf *
xm_filter_socket_bpf__open_and_load(void)
{
	struct xm_filter_socket_bpf *obj;
	int err;

	obj = xm_filter_socket_bpf__open();
	if (!obj)
		return NULL;
	err = xm_filter_socket_bpf__load(obj);
	if (err) {
		xm_filter_socket_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
xm_filter_socket_bpf__attach(struct xm_filter_socket_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
xm_filter_socket_bpf__detach(struct xm_filter_socket_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *xm_filter_socket_bpf__elf_bytes(size_t *sz);

static inline int
xm_filter_socket_bpf__create_skeleton(struct xm_filter_socket_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;

	s->sz = sizeof(*s);
	s->name = "xm_filter_socket_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "tail_call_progs";
	s->maps[0].map = &obj->maps.tail_call_progs;

	s->maps[1].name = "xm_filte.rodata";
	s->maps[1].map = &obj->maps.rodata;
	s->maps[1].mmaped = (void **)&obj->rodata;

	/* programs */
	s->prog_cnt = 5;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "xmonitor_parse_vlan";
	s->progs[0].prog = &obj->progs.xmonitor_parse_vlan;
	s->progs[0].link = &obj->links.xmonitor_parse_vlan;

	s->progs[1].name = "xmonitor_parse_mpls";
	s->progs[1].prog = &obj->progs.xmonitor_parse_mpls;
	s->progs[1].link = &obj->links.xmonitor_parse_mpls;

	s->progs[2].name = "xmonitor_parse_ip";
	s->progs[2].prog = &obj->progs.xmonitor_parse_ip;
	s->progs[2].link = &obj->links.xmonitor_parse_ip;

	s->progs[3].name = "xmonitor_parse_ipv6";
	s->progs[3].prog = &obj->progs.xmonitor_parse_ipv6;
	s->progs[3].link = &obj->links.xmonitor_parse_ipv6;

	s->progs[4].name = "xmonitor_main_socket_prog";
	s->progs[4].prog = &obj->progs.xmonitor_main_socket_prog;
	s->progs[4].link = &obj->links.xmonitor_main_socket_prog;

	s->data = (void *)xm_filter_socket_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *xm_filter_socket_bpf__elf_bytes(size_t *sz)
{
	*sz = 5696;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x11\0\x10\
\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xb7\
\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\xbf\x16\0\
\0\0\0\0\0\xbf\xa3\0\0\0\0\0\0\x07\x03\0\0\xf0\xff\xff\xff\xb7\x07\0\0\x0e\0\0\
\0\xb7\x02\0\0\0\0\0\0\xb7\x04\0\0\x0e\0\0\0\x85\0\0\0\x1a\0\0\0\x65\0\x05\0\
\xff\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x1e\0\0\0\x85\
\0\0\0\x06\0\0\0\x05\0\x1a\0\0\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\xf0\xff\
\xff\xff\x69\x11\x0c\0\0\0\0\0\x63\x76\x30\0\0\0\0\0\xb7\x03\0\0\x01\0\0\0\xdc\
\x01\0\0\x10\0\0\0\x65\x01\x06\0\x46\x88\0\0\x15\x01\x0d\0\0\x08\0\0\x15\x01\
\x0d\0\0\x81\0\0\x15\x01\x01\0\xdd\x86\0\0\x05\0\x0f\0\0\0\0\0\xb7\x03\0\0\x04\
\0\0\0\x05\0\x09\0\0\0\0\0\xbf\x12\0\0\0\0\0\0\x07\x02\0\0\xb9\x77\xff\xff\xb7\
\x04\0\0\x02\0\0\0\x2d\x24\x02\0\0\0\0\0\x15\x01\x04\0\xa8\x88\0\0\x05\0\x07\0\
\0\0\0\0\xb7\x03\0\0\x02\0\0\0\x05\0\x01\0\0\0\0\0\xb7\x03\0\0\x03\0\0\0\xbf\
\x61\0\0\0\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0c\0\0\0\xb7\0\
\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x20\x72\x65\x61\
\x64\x20\x65\x74\x68\x5f\x68\x64\x72\x20\x66\x61\x69\x6c\x65\x64\x2e\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\
\0\0\0\0\0\0\0\xd8\x04\0\0\xd8\x04\0\0\x61\x04\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\
\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\
\x04\0\0\0\x03\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\
\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x04\0\0\0\0\0\0\0\0\0\
\0\x02\x08\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\
\0\x04\0\0\x04\x20\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\
\0\0\x27\0\0\0\x05\0\0\0\x80\0\0\0\x32\0\0\0\x07\0\0\0\xc0\0\0\0\x3e\0\0\0\0\0\
\0\x0e\x09\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0c\0\0\0\x4e\0\0\0\x20\0\0\x04\
\xb8\0\0\0\x58\0\0\0\x0d\0\0\0\0\0\0\0\x5c\0\0\0\x0d\0\0\0\x20\0\0\0\x65\0\0\0\
\x0d\0\0\0\x40\0\0\0\x6a\0\0\0\x0d\0\0\0\x60\0\0\0\x78\0\0\0\x0d\0\0\0\x80\0\0\
\0\x81\0\0\0\x0d\0\0\0\xa0\0\0\0\x8e\0\0\0\x0d\0\0\0\xc0\0\0\0\x97\0\0\0\x0d\0\
\0\0\xe0\0\0\0\xa2\0\0\0\x0d\0\0\0\0\x01\0\0\xab\0\0\0\x0d\0\0\0\x20\x01\0\0\
\xbb\0\0\0\x0d\0\0\0\x40\x01\0\0\xc3\0\0\0\x0d\0\0\0\x60\x01\0\0\xcc\0\0\0\x0f\
\0\0\0\x80\x01\0\0\xcf\0\0\0\x0d\0\0\0\x20\x02\0\0\xd4\0\0\0\x0d\0\0\0\x40\x02\
\0\0\xdf\0\0\0\x0d\0\0\0\x60\x02\0\0\xe4\0\0\0\x0d\0\0\0\x80\x02\0\0\xed\0\0\0\
\x0d\0\0\0\xa0\x02\0\0\xf5\0\0\0\x0d\0\0\0\xc0\x02\0\0\xfc\0\0\0\x0d\0\0\0\xe0\
\x02\0\0\x07\x01\0\0\x0d\0\0\0\0\x03\0\0\x11\x01\0\0\x10\0\0\0\x20\x03\0\0\x1c\
\x01\0\0\x10\0\0\0\xa0\x03\0\0\x26\x01\0\0\x0d\0\0\0\x20\x04\0\0\x32\x01\0\0\
\x0d\0\0\0\x40\x04\0\0\x3d\x01\0\0\x0d\0\0\0\x60\x04\0\0\0\0\0\0\x11\0\0\0\x80\
\x04\0\0\x47\x01\0\0\x13\0\0\0\xc0\x04\0\0\x4e\x01\0\0\x0d\0\0\0\0\x05\0\0\x57\
\x01\0\0\x0d\0\0\0\x20\x05\0\0\0\0\0\0\x15\0\0\0\x40\x05\0\0\x60\x01\0\0\x0d\0\
\0\0\x80\x05\0\0\x69\x01\0\0\0\0\0\x08\x0e\0\0\0\x6f\x01\0\0\0\0\0\x01\x04\0\0\
\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0d\0\0\0\x04\0\0\0\x05\0\0\0\0\0\0\0\0\
\0\0\x03\0\0\0\0\x0d\0\0\0\x04\0\0\0\x04\0\0\0\0\0\0\0\x01\0\0\x05\x08\0\0\0\
\x7c\x01\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x2e\0\0\0\x86\x01\0\0\0\0\0\
\x08\x14\0\0\0\x8c\x01\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\x05\
\x08\0\0\0\xa3\x01\0\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x2f\0\0\0\0\0\0\0\
\x01\0\0\x0d\x18\0\0\0\xa6\x01\0\0\x0b\0\0\0\xaa\x01\0\0\0\0\0\x08\x02\0\0\0\
\xb0\x01\0\0\x01\0\0\x0c\x17\0\0\0\0\0\0\0\x01\0\0\x0d\x18\0\0\0\xa6\x01\0\0\
\x0b\0\0\0\x2b\x02\0\0\x01\0\0\x0c\x1a\0\0\0\0\0\0\0\x01\0\0\x0d\x18\0\0\0\xa6\
\x01\0\0\x0b\0\0\0\x48\x02\0\0\x01\0\0\x0c\x1c\0\0\0\0\0\0\0\x01\0\0\x0d\x18\0\
\0\0\xa6\x01\0\0\x0b\0\0\0\x63\x02\0\0\x01\0\0\x0c\x1e\0\0\0\0\0\0\0\x01\0\0\
\x0d\x18\0\0\0\xa6\x01\0\0\x0b\0\0\0\x80\x02\0\0\x01\0\0\x0c\x20\0\0\0\x8c\x03\
\0\0\x03\0\0\x04\x0e\0\0\0\x93\x03\0\0\x24\0\0\0\0\0\0\0\x9a\x03\0\0\x24\0\0\0\
\x30\0\0\0\xa3\x03\0\0\x25\0\0\0\x60\0\0\0\xab\x03\0\0\0\0\0\x01\x01\0\0\0\x08\
\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x23\0\0\0\x04\0\0\0\x06\0\0\0\xb9\x03\0\0\0\0\
\0\x08\x26\0\0\0\xc0\x03\0\0\0\0\0\x08\x27\0\0\0\xc6\x03\0\0\0\0\0\x01\x02\0\0\
\0\x10\0\0\0\0\0\0\0\0\0\0\x0a\x29\0\0\0\x15\x04\0\0\0\0\0\x01\x01\0\0\0\x08\0\
\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x28\0\0\0\x04\0\0\0\x1e\0\0\0\x1a\x04\0\0\0\0\
\0\x0e\x2a\0\0\0\0\0\0\0\x3c\x04\0\0\x01\0\0\x0f\0\0\0\0\x0a\0\0\0\0\0\0\0\x20\
\0\0\0\x42\x04\0\0\x01\0\0\x0f\0\0\0\0\x2b\0\0\0\0\0\0\0\x1e\0\0\0\x4a\x04\0\0\
\0\0\0\x07\0\0\0\0\x58\x04\0\0\0\0\0\x07\0\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\
\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\
\x65\0\x6b\x65\x79\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\
\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x74\x61\x69\x6c\x5f\x63\
\x61\x6c\x6c\x5f\x70\x72\x6f\x67\x73\0\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\0\
\x6c\x65\x6e\0\x70\x6b\x74\x5f\x74\x79\x70\x65\0\x6d\x61\x72\x6b\0\x71\x75\x65\
\x75\x65\x5f\x6d\x61\x70\x70\x69\x6e\x67\0\x70\x72\x6f\x74\x6f\x63\x6f\x6c\0\
\x76\x6c\x61\x6e\x5f\x70\x72\x65\x73\x65\x6e\x74\0\x76\x6c\x61\x6e\x5f\x74\x63\
\x69\0\x76\x6c\x61\x6e\x5f\x70\x72\x6f\x74\x6f\0\x70\x72\x69\x6f\x72\x69\x74\
\x79\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x69\x66\
\x69\x6e\x64\x65\x78\0\x74\x63\x5f\x69\x6e\x64\x65\x78\0\x63\x62\0\x68\x61\x73\
\x68\0\x74\x63\x5f\x63\x6c\x61\x73\x73\x69\x64\0\x64\x61\x74\x61\0\x64\x61\x74\
\x61\x5f\x65\x6e\x64\0\x6e\x61\x70\x69\x5f\x69\x64\0\x66\x61\x6d\x69\x6c\x79\0\
\x72\x65\x6d\x6f\x74\x65\x5f\x69\x70\x34\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\x34\
\0\x72\x65\x6d\x6f\x74\x65\x5f\x69\x70\x36\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\
\x36\0\x72\x65\x6d\x6f\x74\x65\x5f\x70\x6f\x72\x74\0\x6c\x6f\x63\x61\x6c\x5f\
\x70\x6f\x72\x74\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x74\x73\x74\x61\x6d\
\x70\0\x77\x69\x72\x65\x5f\x6c\x65\x6e\0\x67\x73\x6f\x5f\x73\x65\x67\x73\0\x67\
\x73\x6f\x5f\x73\x69\x7a\x65\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x69\x6e\x74\0\x66\x6c\x6f\x77\x5f\x6b\x65\x79\x73\0\x5f\x5f\x75\
\x36\x34\0\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\x20\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x20\x69\x6e\x74\0\x73\x6b\0\x73\x6b\x62\0\x5f\x5f\x73\x33\x32\0\x78\x6d\
\x6f\x6e\x69\x74\x6f\x72\x5f\x70\x61\x72\x73\x65\x5f\x76\x6c\x61\x6e\0\x73\x6f\
\x63\x6b\x65\x74\x2f\x31\0\x2f\x68\x6f\x6d\x65\x2f\x63\x61\x6c\x6d\x77\x75\x2f\
\x70\x72\x6f\x67\x72\x61\x6d\x2f\x63\x70\x70\x5f\x73\x70\x61\x63\x65\x2f\x78\
\x2d\x6d\x6f\x6e\x69\x74\x6f\x72\x2f\x70\x6c\x75\x67\x69\x6e\x5f\x65\x62\x70\
\x66\x2f\x62\x70\x66\x2f\x78\x6d\x5f\x66\x69\x6c\x74\x65\x72\x5f\x73\x6f\x63\
\x6b\x65\x74\x2e\x62\x70\x66\x2e\x63\0\x20\x20\x20\x20\x72\x65\x74\x75\x72\x6e\
\x20\x30\x3b\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x70\x61\x72\x73\x65\x5f\x6d\
\x70\x6c\x73\0\x73\x6f\x63\x6b\x65\x74\x2f\x32\0\x78\x6d\x6f\x6e\x69\x74\x6f\
\x72\x5f\x70\x61\x72\x73\x65\x5f\x69\x70\0\x73\x6f\x63\x6b\x65\x74\x2f\x33\0\
\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x70\x61\x72\x73\x65\x5f\x69\x70\x76\x36\0\
\x73\x6f\x63\x6b\x65\x74\x2f\x34\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x6d\x61\
\x69\x6e\x5f\x73\x6f\x63\x6b\x65\x74\x5f\x70\x72\x6f\x67\0\x73\x6f\x63\x6b\x65\
\x74\x2f\x30\0\x5f\x5f\x73\x33\x32\x20\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x6d\
\x61\x69\x6e\x5f\x73\x6f\x63\x6b\x65\x74\x5f\x70\x72\x6f\x67\x28\x73\x74\x72\
\x75\x63\x74\x20\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\x20\x2a\x73\x6b\x62\x29\
\x20\x7b\0\x20\x20\x20\x20\x69\x66\x20\x28\x62\x70\x66\x5f\x73\x6b\x62\x5f\x6c\
\x6f\x61\x64\x5f\x62\x79\x74\x65\x73\x28\x73\x6b\x62\x2c\x20\x30\x2c\x20\x26\
\x65\x74\x68\x5f\x68\x64\x72\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x65\x74\x68\
\x5f\x68\x64\x72\x29\x29\x20\x3c\x20\x30\x29\x20\x7b\0\x20\x20\x20\x20\x20\x20\
\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x78\x6d\x6f\x6e\x69\
\x74\x6f\x72\x20\x72\x65\x61\x64\x20\x65\x74\x68\x5f\x68\x64\x72\x20\x66\x61\
\x69\x6c\x65\x64\x2e\x22\x29\x3b\0\x20\x20\x20\x20\x20\x20\x20\x20\x5f\x5f\x75\
\x31\x36\x20\x65\x74\x68\x5f\x70\x72\x6f\x74\x6f\x20\x3d\x20\x62\x70\x66\x5f\
\x6e\x74\x6f\x68\x73\x28\x65\x74\x68\x5f\x68\x64\x72\x2e\x68\x5f\x70\x72\x6f\
\x74\x6f\x29\x3b\0\x65\x74\x68\x68\x64\x72\0\x68\x5f\x64\x65\x73\x74\0\x68\x5f\
\x73\x6f\x75\x72\x63\x65\0\x68\x5f\x70\x72\x6f\x74\x6f\0\x75\x6e\x73\x69\x67\
\x6e\x65\x64\x20\x63\x68\x61\x72\0\x5f\x5f\x62\x65\x31\x36\0\x5f\x5f\x75\x31\
\x36\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x30\x3a\x32\0\
\x30\x3a\x31\x32\x3a\x30\0\x20\x20\x20\x20\x20\x20\x20\x20\x73\x6b\x62\x2d\x3e\
\x63\x62\x5b\x30\x5d\x20\x3d\x20\x6e\x68\x6f\x66\x66\x3b\0\x20\x20\x20\x20\x73\
\x77\x69\x74\x63\x68\x20\x28\x65\x74\x68\x5f\x70\x72\x6f\x74\x6f\x29\x20\x7b\0\
\x63\x68\x61\x72\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x6d\x61\x69\x6e\x5f\x73\
\x6f\x63\x6b\x65\x74\x5f\x70\x72\x6f\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x2e\
\x6d\x61\x70\x73\0\x2e\x72\x6f\x64\x61\x74\x61\0\x62\x70\x66\x5f\x66\x6c\x6f\
\x77\x5f\x6b\x65\x79\x73\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\0\x9f\xeb\x01\0\x20\
\0\0\0\0\0\0\0\x54\0\0\0\x54\0\0\0\x1c\x01\0\0\x70\x01\0\0\x2c\0\0\0\x08\0\0\0\
\xc4\x01\0\0\x01\0\0\0\0\0\0\0\x19\0\0\0\x3f\x02\0\0\x01\0\0\0\0\0\0\0\x1b\0\0\
\0\x5a\x02\0\0\x01\0\0\0\0\0\0\0\x1d\0\0\0\x77\x02\0\0\x01\0\0\0\0\0\0\0\x1f\0\
\0\0\x9a\x02\0\0\x01\0\0\0\0\0\0\0\x21\0\0\0\x10\0\0\0\xc4\x01\0\0\x01\0\0\0\0\
\0\0\0\xcd\x01\0\0\x1d\x02\0\0\x05\xe4\0\0\x3f\x02\0\0\x01\0\0\0\0\0\0\0\xcd\
\x01\0\0\x1d\x02\0\0\x05\xf8\0\0\x5a\x02\0\0\x01\0\0\0\0\0\0\0\xcd\x01\0\0\x1d\
\x02\0\0\x05\x0c\x01\0\x77\x02\0\0\x01\0\0\0\0\0\0\0\xcd\x01\0\0\x1d\x02\0\0\
\x05\x20\x01\0\x9a\x02\0\0\x0b\0\0\0\0\0\0\0\xcd\x01\0\0\xa3\x02\0\0\0\x34\x01\
\0\x10\0\0\0\xcd\x01\0\0\0\0\0\0\0\0\0\0\x20\0\0\0\xcd\x01\0\0\xdc\x02\0\0\x09\
\x48\x01\0\x38\0\0\0\xcd\x01\0\0\xdc\x02\0\0\x09\x48\x01\0\x40\0\0\0\xcd\x01\0\
\0\x21\x03\0\0\x09\x4c\x01\0\x70\0\0\0\xcd\x01\0\0\x56\x03\0\0\x1b\x54\x01\0\
\x80\0\0\0\xcd\x01\0\0\xe0\x03\0\0\x14\x58\x01\0\x90\0\0\0\xcd\x01\0\0\x56\x03\
\0\0\x1b\x54\x01\0\x98\0\0\0\xcd\x01\0\0\xfc\x03\0\0\x05\x94\0\0\x18\x01\0\0\
\xcd\x01\0\0\0\0\0\0\0\0\0\0\x38\x01\0\0\xcd\x01\0\0\x1d\x02\0\0\x05\x64\x01\0\
\x10\0\0\0\x9a\x02\0\0\x02\0\0\0\x78\0\0\0\x22\0\0\0\xd5\x03\0\0\0\0\0\0\x80\0\
\0\0\x0c\0\0\0\xd9\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x04\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x03\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\
\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0a\x01\0\0\0\0\x06\0\x68\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x14\0\0\0\x01\0\x07\0\0\0\0\0\0\0\0\0\x1e\0\0\0\0\0\0\0\x11\
\x01\0\0\0\0\x06\0\x38\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf1\0\0\0\0\0\x06\0\xd0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcf\0\0\0\0\0\x06\0\x10\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x22\x01\0\0\0\0\x06\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x33\x01\0\0\
\0\0\x06\0\xc0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd6\0\0\0\0\0\x06\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x72\0\
\0\0\x12\0\x02\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x3c\0\0\0\x12\0\x03\0\0\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x60\0\0\0\x12\0\x04\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\xdd\0\0\0\x12\0\x05\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x86\0\0\0\x12\0\
\x06\0\0\0\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\x50\0\0\0\x11\0\x08\0\0\0\0\0\0\0\0\
\0\x20\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\x20\x01\0\0\0\0\0\0\
\x01\0\0\0\x14\0\0\0\xb8\x04\0\0\0\0\0\0\x04\0\0\0\x14\0\0\0\xd0\x04\0\0\0\0\0\
\0\x03\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x01\0\0\0\x3c\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x4c\0\0\0\0\0\0\0\x04\0\0\0\x03\0\0\0\x5c\0\0\0\0\0\0\0\
\x04\0\0\0\x04\0\0\0\x6c\0\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\0\x01\0\0\0\x98\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xb0\0\0\0\0\0\0\0\
\x04\0\0\0\x03\0\0\0\xc8\0\0\0\0\0\0\0\x04\0\0\0\x04\0\0\0\xe0\0\0\0\0\0\0\0\
\x04\0\0\0\x05\0\0\0\xf0\0\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\0\x01\0\0\0\0\0\0\
\x04\0\0\0\x05\0\0\0\x10\x01\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x20\x01\0\0\0\0\0\
\0\x04\0\0\0\x05\0\0\0\x30\x01\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x40\x01\0\0\0\0\
\0\0\x04\0\0\0\x05\0\0\0\x50\x01\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x60\x01\0\0\0\
\0\0\0\x04\0\0\0\x05\0\0\0\x70\x01\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x80\x01\0\0\
\0\0\0\0\x04\0\0\0\x05\0\0\0\x9c\x01\0\0\0\0\0\0\x04\0\0\0\x05\0\0\0\xac\x01\0\
\0\0\0\0\0\x04\0\0\0\x05\0\0\0\x16\x17\x18\x19\x1a\x08\x1b\0\x2e\x74\x65\x78\
\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x78\x6d\x6f\x6e\x69\
\x74\x6f\x72\x5f\x6d\x61\x69\x6e\x5f\x73\x6f\x63\x6b\x65\x74\x5f\x70\x72\x6f\
\x67\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x2e\x6d\x61\x70\x73\0\x78\x6d\x6f\x6e\
\x69\x74\x6f\x72\x5f\x70\x61\x72\x73\x65\x5f\x6d\x70\x6c\x73\0\x74\x61\x69\x6c\
\x5f\x63\x61\x6c\x6c\x5f\x70\x72\x6f\x67\x73\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\
\x5f\x70\x61\x72\x73\x65\x5f\x69\x70\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x70\
\x61\x72\x73\x65\x5f\x76\x6c\x61\x6e\0\x78\x6d\x6f\x6e\x69\x74\x6f\x72\x5f\x6d\
\x61\x69\x6e\x5f\x73\x6f\x63\x6b\x65\x74\x5f\x70\x72\x6f\x67\0\x2e\x6c\x6c\x76\
\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\
\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\x72\x65\x6c\x2e\x42\
\x54\x46\0\x4c\x42\x42\x34\x5f\x39\0\x4c\x42\x42\x34\x5f\x38\0\x78\x6d\x6f\x6e\
\x69\x74\x6f\x72\x5f\x70\x61\x72\x73\x65\x5f\x69\x70\x76\x36\0\x4c\x42\x42\x34\
\x5f\x36\0\x73\x6f\x63\x6b\x65\x74\x2f\x34\0\x73\x6f\x63\x6b\x65\x74\x2f\x33\0\
\x4c\x42\x42\x34\x5f\x32\0\x4c\x42\x42\x34\x5f\x31\x32\0\x73\x6f\x63\x6b\x65\
\x74\x2f\x32\0\x4c\x42\x42\x34\x5f\x31\x31\0\x73\x6f\x63\x6b\x65\x74\x2f\x31\0\
\x4c\x42\x42\x34\x5f\x31\x30\0\x2e\x72\x65\x6c\x73\x6f\x63\x6b\x65\x74\x2f\x30\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\x06\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2a\x01\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x19\x01\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x50\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x01\x01\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\0\0\0\0\0\
\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\0\
\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3f\x01\0\0\x01\0\0\0\
\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbe\0\0\0\x01\0\0\0\x02\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xc8\x01\0\0\0\0\0\0\x1e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x36\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xe8\x01\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xca\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x02\0\
\0\0\0\0\0\x51\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x0b\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x59\x0b\0\0\0\0\0\0\xbc\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb6\0\0\0\
\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x0d\0\0\0\0\0\0\xf8\x01\0\0\0\0\
\0\0\x10\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x3b\x01\0\0\x09\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x0f\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x0b\
\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xc6\0\0\0\x09\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x0f\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x0b\0\0\0\x09\
\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x07\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x50\x0f\0\0\0\0\0\0\x60\x01\0\0\0\0\0\0\x0b\0\0\0\x0a\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xa0\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\
\0\0\0\0\0\0\0\0\0\xb0\x10\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xae\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xb7\x10\0\0\0\0\0\0\x48\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0";
}

#endif /* __XM_FILTER_SOCKET_BPF_SKEL_H__ */
