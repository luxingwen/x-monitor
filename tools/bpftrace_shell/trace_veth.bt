#!/usr/bin/env /usr/local/bin/bpftrace

#ifndef BPFTRACE_HAVE_BTF
#include <linux/types.h>
#include <linux/skbuff.h>
#include <linux/netdevice.h>
#include <linux/tcp.h>
#endif

kprobe:netif_rx_internal {
    $skb = (struct sk_buff *)arg0;
    if (strncmp("calmveth", $skb->dev->name, 8) == 0 ) {
        // 到这里是ip层的长度了
        printf("netif_rx_internal skbdev=%s received skb=%x skblen=%d\n", $skb->dev->name, $skb, $skb->len);
        printf("\t%s\n", kstack(perf))
    }
}

kprobe:veth_xmit {
    $skb = (struct sk_buff *)arg0;
    $netdev = (struct net_device *)arg1;
    if (strncmp("calmveth", $skb->dev->name, 8) == 0 ) {
        $veth_peer = *((struct net_device **)((uint8*)$netdev + sizeof(struct net_device)));
        printf("veth_xmit skb=%x skblen=%d bytes skbdev=%s ===> peer_skbdev=%s\n", $skb, $skb->len, $skb->dev->name, $veth_peer->name);
        printf("\t%s\n", kstack(perf))
    }
}

kprobe:__br_forward {
    $to = (struct net_bridge_port *)arg0;
    $skb = (struct sk_buff *)arg1;
    if (strncmp("calmveth", $skb->dev->name, 8) == 0 ) {
        printf("__br_forward skb=%x skblen=%d from %s ===> %s\n", $skb, $skb->len, $skb->dev->name, $to->dev->name);
        printf("\t%s\n", kstack(perf))
    }
}

/*
kprobe:ip_rcv {
    $skb = (struct sk_buff *)arg0;
    $skblen = $skb->len;
    $netdev = (struct net_device *)arg1;
    $packet_type = (int32)arg2;
    $origdev = (struct net_device *)arg3;
    printf("ip_rcv skbdev=%s skblen=%d skbdata='%s' netdev=%s packet_type=%d origdev=%s\n", $skb->dev->name, $skblen, str($skb->data), $netdev->name, $packet_type, $origdev->name);
}

kprobe:__dev_queue_xmit {
    $skb = (struct sk_buff *)arg0;
    $skbdev_name = $skb->dev->name;
    $netdev = (struct net_device *)arg1;
    if (strncmp("eth0", $skbdev_name, 4) != 0 ) {
        printf("__dev_queue_xmit skbdev=%s skblen=%d skbdata='%s' netdev=%s\n", $skbdev_name, $skb->len, str($skb->data), $netdev->name);
    }
}


kprobe:tcp_rcv_established {
    $skb = (struct sk_buff *)arg1;
    // $tsk = (struct tcp_sock *)arg0;
    // if (args->sk->__sk_common.skc_daddr == (uint32)pton("127.0.0.1"))
    if (pid == 890257) {
        if ($skb->len > 32) {
            printf("tcp_rcv_established skbdev='%s' skblen=%d data='%s'\n", $skb->dev->name, $skb->len, str($skb->data + 33));
        }
    }
}
*/